version: '3'
services: 
    postgres:
        image: 'postgres:latest'
    redis:
        image: 'redis:latest'
    nginx:
        restart: always
        build: 
            dockerfile: Dockerfile.dev
            context: ./nginx
        ports: 
            - '3050:80'
    api:
        build: 
            dockerfile: Dockerfile.dev
            context: ./server
            #./server -> maksudnya menunjukan path sekarang (workdir) menuju folder "server"
            # dan menggunakan semua file dan semua folder didalamnya untuk membuat image ini
        volumes: 
            - /app/node_modules
            # /app/node_modules -> jangan coba mengganti / menipa biarkan folder itu apa adanya
            - ./server:/app
            # ./server:/app -> jadi sekarang setiap saat aplikasi kita mencoba mengakses apapun didalam direktori
            # aplikasi di dalam wadah kecuali untuk folder 'node_modules' dan itu pada dasarnya akan diarahkan
            # kembali kedalam direktori server folder kami saat ini 

            # sekarang kapan saja kami melakukan perubahan apapun di dalam server yang akan secara otomatis
            # tercermin didalam folder container kami dan itu akan memastikan bahwa kita tidak harus membangun
            # kembali gambar kita kapan saja apabila kita melkauka perubahan pada source code
        environment: 
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - PGUSER=postgres
            - PGHOST=postgres
            - PGDATABASE=postgres
            - PGPASSWORD=postgres_password
            - PGPORT=5432
    client:
        build:
            dockerfile: Dockerfile.dev
            context: ./client
        volumes: 
            - /app/node_modules
            - ./client:/app
    worker:
        build: 
            dockerfile: Dockerfile.dev
            context: ./worker
        volumes: 
            - /app/node_modules
            - ./worker:/app
